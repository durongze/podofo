cmake_minimum_required(VERSION 3.14)
project (jpeg)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -std=c++17 -fPIC ")

# rdppm.o rdgif.o rdtarga.o rdrle.o rdbmp.o rdswitch.o cdjpeg.o
file(GLOB_RECURSE _RD_SRC_LIST RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ./rd*.c ./cd*.c)         

# jaricom.lo jcapimin.lo jcapistd.lo jcarith.lo jccoefct.lo jccolor.lo jcdctmgr.lo
# jchuff.lo jcinit.lo jcmainct.lo jcmarker.lo jcmaster.lo jcomapi.lo jcparam.lo jcprepct.lo
# jcsample.lo jctrans.lo jdapimin.lo jdapistd.lo jdarith.lo jdatadst.lo jdatasrc.lo jdcoefct.lo
# jdcolor.lo jddctmgr.lo jdhuff.lo jdinput.lo jdmainct.lo jdmarker.lo jdmaster.lo jdmerge.lo
# jdpostct.lo jdsample.lo jdtrans.lo jerror.lo jfdctflt.lo jfdctfst.lo jfdctint.lo jidctflt.lo jidctfst.lo
# jidctint.lo jquant1.lo jquant2.lo jutils.lo jmemmgr.lo jmemnobs.lo
file(GLOB_RECURSE _J_SRC_LIST RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "./j*.c")

configure_file(jconfig.txt jconfig.h)

IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
    list(REMOVE_ITEM _RD_SRC_LIST rdjpgcom.c)
	list(REMOVE_ITEM _J_SRC_LIST jmemdos.c jmemmac.c)
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	list(REMOVE_ITEM _RD_SRC_LIST rdjpgcom.c)
	list(REMOVE_ITEM _J_SRC_LIST jmemansi.c jmemdos.c jmemmac.c jmemnobs.c)
	message("CMAKE_SYSTEM_NAME:${CMAKE_SYSTEM_NAME}")
	set(CMAKE_C_FLAGS " -D_CRT_SECURE_NO_WARNINGS ")
ENDIF()

message("CMAKE_SYSTEM_NAME:${CMAKE_SYSTEM_NAME}")

message("_RD_SRC_LIST:${_RD_SRC_LIST}")
message("_J_SRC_LIST:${_J_SRC_LIST}")

set(LIBJPEG_SRC_LIST  ${_RD_SRC_LIST} ${_J_SRC_LIST}  transupp.c )
set(LIBJPEG_HDRS_LIST ${CMAKE_SOURCE_DIR}/jpeglib.h              )

include_directories(${CMAKE_CURRENT_BINARY_DIR})

# CCLD     libjpeg.la

set(LIBJPEG_STATIC libjpeg_static)
add_library               (${LIBJPEG_STATIC}   STATIC     ${LIBJPEG_SRC_LIST}                     )
target_include_directories(${LIBJPEG_STATIC}   PRIVATE    ${LIBJPEG_INC_DIR}  ${ZLIB_INCLUDE_DIRS})
target_link_directories   (${LIBJPEG_STATIC}   PRIVATE    ${LIBJPEG_SRC_DIR}  ${ZLIB_LIBRARY_DIRS})
target_link_libraries     (${LIBJPEG_STATIC}   PRIVATE                        ${ZLIB_LIBRARIES}   )
#target_compile_definitions(${LIBJPEG_STATIC}   PRIVATE     WIN32   _WINDOWS   _DEBUG              )
#target_link_options       (${LIBJPEG_STATIC}   PRIVATE   "/SUBSYSTEM:WINDOWS" "/ENTRY:wWinMainCRTStartup")
set_target_properties     (${LIBJPEG_STATIC}   PROPERTIES  CLEAN_DIRECT_OUTPUT 1    OUTPUT_NAME "libjpeg_static"  )
set_target_properties     (${LIBJPEG_STATIC}   PROPERTIES  PUBLIC_HEADER       "${LIBJPEG_HDRS_LIST}")

set(LIBJPEG_SHARED libjpeg_shared)
add_library               (${LIBJPEG_SHARED} SHARED  ${LIBJPEG_SRC_LIST})
target_include_directories(${LIBJPEG_SHARED} PRIVATE ${LIBJPEG_INC_DIR}   ${ZLIB_INCLUDE_DIRS})
target_link_directories   (${LIBJPEG_SHARED} PRIVATE ${LIBJPEG_SRC_DIR}   ${ZLIB_LIBRARY_DIRS})
target_link_libraries     (${LIBJPEG_SHARED} PRIVATE                      ${ZLIB_LIBRARIES}   ) 
#target_compile_definitions(${LIBJPEG_SHARED} PRIVATE WIN32   _WINDOWS   _DEBUG              )
#target_link_options       (${LIBJPEG_SHARED} PRIVATE   "/SUBSYSTEM:WINDOWS" "/ENTRY:wWinMainCRTStartup")
set_target_properties     (${LIBJPEG_SHARED} PROPERTIES  CLEAN_DIRECT_OUTPUT 1    OUTPUT_NAME "libjpeg_shared"  )
set_target_properties     (${LIBJPEG_SHARED} PROPERTIES  PUBLIC_HEADER       "${LIBJPEG_HDRS_LIST}")

# CCLD     cjpeg
file(GLOB _CJPEG_SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/cjpeg.c)

set(CJPEG_APP  cjpeg)
add_executable            (${CJPEG_APP} ${_CJPEG_SRC_LIST})
target_include_directories(${CJPEG_APP} PRIVATE ${LIBJPEG_INC_DIR}  ${ZLIB_INCLUDE_DIRS})
target_link_directories   (${CJPEG_APP} PRIVATE ${LIBJPEG_SRC_DIR}  ${ZLIB_LIBRARY_DIRS})
target_link_libraries     (${CJPEG_APP} PRIVATE ${LIBJPEG_STATIC}   ${ZLIB_LIBRARIES}   )
#target_link_options       (${CJPEG_APP} PRIVATE "/SUBSYSTEM:WINDOWS" "/ENTRY:wWinMainCRTStartup")
#target_compile_definitions(${CJPEG_APP} PRIVATE WIN32     _WINDOWS    _DEBUG    _UNICODE     UNICODE)

# CCLD     djpeg
file(GLOB _DJPEG_SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/djpeg.c
  ${CMAKE_CURRENT_SOURCE_DIR}/wrppm.c
  ${CMAKE_CURRENT_SOURCE_DIR}/wrgif.c
  ${CMAKE_CURRENT_SOURCE_DIR}/wrtarga.c
  ${CMAKE_CURRENT_SOURCE_DIR}/wrrle.c
  ${CMAKE_CURRENT_SOURCE_DIR}/wrbmp.c
  ${CMAKE_CURRENT_SOURCE_DIR}/rdcolmap.c)
add_executable(djpeg ${_DJPEG_SRC_LIST})
target_link_libraries(djpeg PUBLIC libjpeg_static)

# CCLD     jpegtran
file(GLOB _JPEG_TRAN_SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/jpegtran.c ${CMAKE_CURRENT_SOURCE_DIR}/transupp.c)
add_executable(jpegtran ${_JPEG_TRAN_SRC_LIST})
target_link_libraries(jpegtran PUBLIC libjpeg_static)

# CCLD     rdjpgcom
file(GLOB _RDJPEG_SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/rdjpgcom.c)
add_executable(rdjpgcom ${_RDJPEG_SRC_LIST})
target_link_libraries(rdjpgcom PUBLIC libjpeg_static)

# CCLD     wrjpgcom
file(GLOB _WRJPEG_SRC_LIST ${CMAKE_CURRENT_SOURCE_DIR}/wrjpgcom.c)
add_executable(wrjpgcom ${_WRJPEG_SRC_LIST})
target_link_libraries(wrjpgcom PUBLIC libjpeg_static)

SET(install_targets wrjpgcom rdjpgcom jpegtran djpeg cjpeg libjpeg_static libjpeg_shared )

INSTALL(TARGETS ${install_targets}
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        PUBLIC_HEADER DESTINATION include
       )
